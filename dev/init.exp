#!/usr/bin/expect -f

# OMG THIS WAS A PAIN TO CREATE

if {$argc == 0} {puts "Please specify a grunt init template."; exit}

set template [lrange $argv 0 0]
set project "grunt-$template-example"

log_file -noappend /tmp/grunt-expect-out

set timeout -1
spawn $env(SHELL)
match_max 100000

expect "$ "
send "simple_prompt='\n$ '\r"
expect "\r"

expect "$ "
send "cd /tmp\r"
expect "$ "
send "rm -rf /tmp/$project\r"

expect "$ "
send "mkdir $project && cd $project\r"

expect "$ "
send "git init\r"
expect "$ "
send "git remote add origin git@github.com:cowboy/$project.git\r"

expect "$ "
send "grunt init:$template --no-color\r"

expect "Please answer the following:"

expect {
  "Are these answers correct? (Y/n)" {send "\r"}
  "What versions of node does it run on?" {send "*"; exp_continue}
  "Description" {send "This is sample scaffolding generated by grunt init:$template."; exp_continue}
  ") " {send "\r"; exp_continue}
}

expect "$ "
send "tree\r"

expect "$ "
send "grunt --no-color\r"

expect "$ "
send "tree\r"

expect "$ "
send "git add .\r"
expect "$ "
send "git commit -m 'Committing sample scaffolding.'\r"
expect "$ "
send "git push -u origin master\r"

expect "$ "
send "# EOF\n"

expect "$ "
send "echo -e '
### PROJECT CREATION TRANSCRIPT
The following is a transcript of the session in which this project and repository were created. This is not actually a part of the \[grunt\]\[grunt\] \"init:$template\" template. The text after the `$` are the commands that were executed, and everything else is program output. This session transcript was added afterwards. If you want to see the repository as it was created by grunt, browse \[the previous commit\](https://github.com/cowboy/$project/tree/HEAD~1).

Want to learn more? Check \[grunt\]\[grunt\] out.

\[grunt\]: https://github.com/cowboy/grunt

And in case you'\"'\"'re curious, this entire build process is automated by a rather large \[expect script\](https://github.com/cowboy/grunt/blob/master/dev/init.exp).

```' >> README.md\r"
expect "$ "
send "cat /tmp/grunt-expect-out | perl -ne's/ --no-color//;if(/^\\\$ mkdir/){\$x=1}elsif(/^\\\$ # EOF/){\$x=0}\$x&&print\$_' >> README.md\r"
expect "$ "
send "echo '```' >> README.md\r"

expect "$ "
send "git add .\r"
expect "$ "
send "git commit -m 'Adding project creation transcript.'\r"
expect "$ "
send "git push -u origin master\r"

expect "$ "
send "exit\r"

expect eof
